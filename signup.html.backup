<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Signup - TradeEdge Pro</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        /* Glass Background Animation */
        .background-animation {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
        }

        .glass-particle {
            position: absolute;
            background: rgba(255, 255, 255, 0.03);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            backdrop-filter: blur(10px);
            animation: float 20s infinite linear;
        }

        @keyframes float {
            0% { transform: translateY(100vh) rotate(0deg); opacity: 0; }
            10% { opacity: 0.3; }
            90% { opacity: 0.3; }
            100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
        }

        .signup-container {
            position: relative;
            z-index: 1;
            max-width: 600px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        .logo {
            text-align: center;
            margin-bottom: 40px;
        }

        .logo h1 {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.6));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 10px;
        }

        .logo p {
            color: rgba(255, 255, 255, 0.7);
            font-size: 1.1rem;
            font-weight: 300;
        }

        .form-container {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        .form-group label {
            display: block;
            color: rgba(255, 255, 255, 0.8);
            font-weight: 500;
            margin-bottom: 8px;
            font-size: 0.95rem;
        }

        .required {
            color: rgba(255, 100, 100, 0.8);
        }

        .form-input, .form-select {
            width: 100%;
            padding: 15px 20px;
            background: rgba(255, 255, 255, 0.08);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 12px;
            color: white;
            font-size: 1rem;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: rgba(255, 255, 255, 0.4);
            background: rgba(255, 255, 255, 0.12);
            box-shadow: 0 0 20px rgba(255, 255, 255, 0.1);
        }

        .form-input::placeholder {
            color: rgba(255, 255, 255, 0.5);
        }

        .checkbox-group {
            display: flex;
            align-items: flex-start;
            gap: 12px;
            margin-bottom: 20px;
        }

        .checkbox-input {
            width: 18px;
            height: 18px;
            margin-top: 2px;
            accent-color: rgba(100, 200, 255, 0.8);
        }

        .checkbox-label {
            color: rgba(255, 255, 255, 0.8);
            font-size: 0.9rem;
            line-height: 1.4;
            cursor: pointer;
        }

        .checkbox-label a {
            color: rgba(100, 200, 255, 0.8);
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .checkbox-label a:hover {
            color: rgba(100, 200, 255, 1);
        }

        .signup-btn {
            width: 100%;
            padding: 18px;
            background: linear-gradient(135deg, rgba(100, 200, 255, 0.3), rgba(150, 100, 255, 0.3));
            border: 1px solid rgba(255, 255, 255, 0.3);
            border-radius: 12px;
            color: white;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            margin-top: 10px;
        }

        .signup-btn:hover {
            background: linear-gradient(135deg, rgba(100, 200, 255, 0.4), rgba(150, 100, 255, 0.4));
            box-shadow: 0 10px 30px rgba(100, 200, 255, 0.2);
        }

        .signup-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .loading {
            display: none;
            text-align: center;
            margin-top: 20px;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-top: 3px solid rgba(100, 200, 255, 0.8);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .message {
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            font-weight: 500;
        }

        .error-message {
            background: rgba(255, 100, 100, 0.2);
            border: 1px solid rgba(255, 100, 100, 0.3);
            color: rgba(255, 150, 150, 0.9);
        }

        .success-message {
            background: rgba(100, 255, 150, 0.2);
            border: 1px solid rgba(100, 255, 150, 0.3);
            color: rgba(150, 255, 180, 0.9);
        }

        .back-link {
            text-align: center;
            margin-top: 30px;
        }

        .back-link a {
            color: rgba(255, 255, 255, 0.7);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .back-link a:hover {
            color: rgba(100, 200, 255, 0.8);
        }

        @media (max-width: 768px) {
            .signup-container {
                padding: 20px 15px;
            }
            
            .form-container {
                padding: 25px;
            }
            
            .logo h1 {
                font-size: 2rem;
            }
            
            .form-row {
                grid-template-columns: 1fr;
                gap: 0;
            }
        }
    </style>
</head>
<body>
    <div class="background-animation" id="background"></div>
    
    <div class="signup-container">
        <div class="logo">
            <h1>🚀 TradeEdge Pro</h1>
            <p>Create your trading account</p>
        </div>

        <div class="form-container">
            <div id="error-message" class="message error-message" style="display: none;"></div>
            <div id="success-message" class="message success-message" style="display: none;"></div>

            <form id="signup-form">
                <div class="form-row">
                    <div class="form-group">
                        <label for="firstName">First Name <span class="required">*</span></label>
                        <input type="text" id="firstName" name="firstName" class="form-input" placeholder="Enter your first name" required>
                    </div>
                    <div class="form-group">
                        <label for="lastName">Last Name <span class="required">*</span></label>
                        <input type="text" id="lastName" name="lastName" class="form-input" placeholder="Enter your last name" required>
                    </div>
                </div>

                <div class="form-group">
                    <label for="email">Email Address <span class="required">*</span></label>
                    <input type="email" id="email" name="email" class="form-input" placeholder="Enter your email address" required>
                </div>

                <div class="form-group">
                    <label for="phone">Phone Number <span class="required">*</span></label>
                    <input type="tel" id="phone" name="phone" class="form-input" placeholder="Enter your phone number" required>
                </div>

                <div class="form-group">
                    <label for="password">Password <span class="required">*</span></label>
                    <input type="password" id="password" name="password" class="form-input" placeholder="Create a strong password" required>
                </div>

                <div class="form-group">
                    <label for="company">Company (Optional)</label>
                    <input type="text" id="company" name="company" class="form-input" placeholder="Enter your company name">
                </div>

                <div class="form-group">
                    <label for="country">Country <span class="required">*</span></label>
                    <select id="country" name="country" class="form-select" required>
                        <option value="">Select your country</option>
                        <option value="US">United States</option>
                        <option value="CA">Canada</option>
                        <option value="GB">United Kingdom</option>
                        <option value="AU">Australia</option>
                        <option value="DE">Germany</option>
                        <option value="FR">France</option>
                        <option value="IT">Italy</option>
                        <option value="ES">Spain</option>
                        <option value="NL">Netherlands</option>
                        <option value="SE">Sweden</option>
                        <option value="NO">Norway</option>
                        <option value="DK">Denmark</option>
                        <option value="FI">Finland</option>
                        <option value="CH">Switzerland</option>
                        <option value="AT">Austria</option>
                        <option value="BE">Belgium</option>
                        <option value="IE">Ireland</option>
                        <option value="PT">Portugal</option>
                        <option value="GR">Greece</option>
                        <option value="PL">Poland</option>
                        <option value="CZ">Czech Republic</option>
                        <option value="HU">Hungary</option>
                        <option value="SK">Slovakia</option>
                        <option value="SI">Slovenia</option>
                        <option value="HR">Croatia</option>
                        <option value="BG">Bulgaria</option>
                        <option value="RO">Romania</option>
                        <option value="LT">Lithuania</option>
                        <option value="LV">Latvia</option>
                        <option value="EE">Estonia</option>
                        <option value="JP">Japan</option>
                        <option value="KR">South Korea</option>
                        <option value="SG">Singapore</option>
                        <option value="HK">Hong Kong</option>
                        <option value="NZ">New Zealand</option>
                        <option value="ZA">South Africa</option>
                        <option value="BR">Brazil</option>
                        <option value="MX">Mexico</option>
                        <option value="AR">Argentina</option>
                        <option value="CL">Chile</option>
                        <option value="CO">Colombia</option>
                        <option value="PE">Peru</option>
                        <option value="IN">India</option>
                        <option value="TH">Thailand</option>
                        <option value="MY">Malaysia</option>
                        <option value="PH">Philippines</option>
                        <option value="ID">Indonesia</option>
                        <option value="VN">Vietnam</option>
                        <option value="AE">United Arab Emirates</option>
                        <option value="SA">Saudi Arabia</option>
                        <option value="IL">Israel</option>
                        <option value="TR">Turkey</option>
                        <option value="RU">Russia</option>
                        <option value="UA">Ukraine</option>
                        <option value="Other">Other</option>
                    </select>
                </div>

                <div class="checkbox-group">
                    <input type="checkbox" id="terms" name="terms" class="checkbox-input" required>
                    <label for="terms" class="checkbox-label">
                        I agree to the <a href="/terms" target="_blank">Terms of Service</a> and <a href="/privacy" target="_blank">Privacy Policy</a> <span class="required">*</span>
                    </label>
                </div>

                <div class="checkbox-group">
                    <input type="checkbox" id="newsletter" name="newsletter" class="checkbox-input">
                    <label for="newsletter" class="checkbox-label">
                        I would like to receive trading insights and updates via email
                    </label>
                </div>

                <button type="submit" class="signup-btn" id="signup-btn">
                    Create Account & Continue to Payment
                </button>

                <div class="loading" id="loading">
                    <div class="spinner"></div>
                    <p style="color: rgba(255, 255, 255, 0.8);">Creating your account...</p>
                </div>
            </form>
        </div>

        <div class="back-link">
            <a href="/">Want to change your plan? Back to Plans</a>
        </div>
    </div>

    <script>
        // API Configuration
        const API_BASE = window.location.hostname === 'localhost' ? 'http://localhost:5000' : 'https://your-api-domain.com';

        // Initialize background animation
        function createGlassParticles() {
            const background = document.getElementById('background');
            for (let i = 0; i < 15; i++) {
                const particle = document.createElement('div');
                particle.className = 'glass-particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.width = particle.style.height = (Math.random() * 60 + 20) + 'px';
                particle.style.animationDelay = Math.random() * 20 + 's';
                particle.style.animationDuration = (Math.random() * 10 + 15) + 's';
                background.appendChild(particle);
            }
        }

        // Form submission
        function initFormSubmission() {
            const form = document.getElementById('signup-form');
            const submitBtn = document.getElementById('signup-btn');
            const loading = document.getElementById('loading');
            const errorMessage = document.getElementById('error-message');
            const successMessage = document.getElementById('success-message');

            form.addEventListener('submit', async (e) => {
                e.preventDefault();

                // Hide previous messages
                errorMessage.style.display = 'none';
                successMessage.style.display = 'none';

                // Validate form
                const formData = new FormData(form);
                const userData = {
                    firstName: formData.get('firstName'),
                    lastName: formData.get('lastName'),
                    email: formData.get('email'),
                    phone: formData.get('phone'),
                    password: formData.get('password'),
                    company: formData.get('company'),
                    country: formData.get('country'),
                    terms: formData.get('terms') === 'on',
                    newsletter: formData.get('newsletter') === 'on'
                };

                // Basic validation
                if (!userData.firstName || !userData.lastName || !userData.email || !userData.phone || !userData.password || !userData.country) {
                    errorMessage.textContent = '❌ Please fill in all required fields';
                    errorMessage.style.display = 'block';
                    return;
                }

                if (!userData.terms) {
                    errorMessage.textContent = '❌ Please accept the Terms of Service and Privacy Policy';
                    errorMessage.style.display = 'block';
                    return;
                }

                // Show loading
                submitBtn.style.display = 'none';
                loading.style.display = 'block';

                try {
                    // Submit to API
                    const response = await fetch(`${API_BASE}/api/working/register`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(userData)
                    });

                    const result = await response.json();

                    if (response.ok && result.success) {
                        // Store user data in localStorage
                        localStorage.setItem('userData', JSON.stringify({
                            ...userData,
                            user_id: result.user_id,
                            access_token: result.access_token
                        }));

                        // Show success message
                        successMessage.textContent = '✅ Account created successfully! Redirecting to payment...';
                        successMessage.style.display = 'block';

                        // Redirect after delay
                        setTimeout(() => {
                            window.location.href = '/payment.html';
                        }, 2000);
                    } else {
                        throw new Error(result.message || 'Registration failed');
                    }
                } catch (error) {
                    console.error('Registration error:', error);
                    errorMessage.textContent = `❌ ${error.message}`;
                    errorMessage.style.display = 'block';
                } finally {
                    // Hide loading
                    loading.style.display = 'none';
                    submitBtn.style.display = 'block';
                }
            });
        }

        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', () => {
            createGlassParticles();
            initFormSubmission();
        });
    </script>
</body>
</html>
