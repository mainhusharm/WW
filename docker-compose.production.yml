version: '3.8'

services:
  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://backend:5000
      - REACT_APP_FOREX_API_URL=http://forex-service:3004
      - REACT_APP_CUSTOMER_API_URL=http://customer-service:3005
    depends_on:
      - backend
      - forex-service
      - customer-service

  # Main Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=sqlite:///data/trading_journal.db
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - MAILCHIMP_API_KEY=${MAILCHIMP_API_KEY}
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Forex Data Service
  forex-service:
    build:
      context: .
      dockerfile: Dockerfile.forex
    ports:
      - "3004:3004"
    environment:
      - PORT=3004
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Customer Service API
  customer-service:
    build:
      context: .
      dockerfile: Dockerfile.customer
    ports:
      - "3005:3005"
    environment:
      - PORT=3005
    volumes:
      - ./customer-data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Binance Service
  binance-service:
    build:
      context: .
      dockerfile: Dockerfile.binance
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Trading Signal Bot
  trading-bot:
    build:
      context: .
      dockerfile: Dockerfile.trading-bot
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
      - forex-service
      - customer-service
      - binance-service
      - trading-bot
    restart: unless-stopped

volumes:
  data:
  customer-data:
  uploads:
  logs:

networks:
  default:
    driver: bridge
